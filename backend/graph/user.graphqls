# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @auth on FIELD_DEFINITION

scalar Any

type User {
  id: ID!
  name: String!
  email: String!
  PhotoProfile: String!
  FollowedUser: [String!]!
  ConnectedUser: [String!]!
  RequestConnect: [String!]!
  RequestConnectTxt: [String!]!
  Headline: String!
  ProfileViews: Int!
  BgPhotoProfile: String!
  FirstName: String!
  LastName: String!
  AdditionalName: String!
  Gender: String!
  BlockedUser: [String!]!
}

type Query {
  searchConnected: [User!]! @auth
  user(id: String!): User! @auth
  users: [User!]!
  whoisme: User! @auth
  userSuggestion: [User!]! @auth
}

input NewUser {
  name: String!
  password: String!
  email: String!
}

input UpdateUser {
  Name: String!
  Email: String!
  PhotoProfile: String!
  Headline: String!
  BgPhotoProfile: String!
}

input AllUpdateUser {
  Headline: String!
  FirstName: String!
  LastName: String!
  AdditionalName: String!
  Gender: String!
}

type Mutation {
  updateUserWithId(id: ID!, input: AllUpdateUser!): String!
  blockUser(id: ID!): String! @auth
  profileSeen(id: ID!): String!
  requestChangePassword(email: String!): String!
  changePassword(password: String!, id: ID!): String!
  follow(id: ID!): String! @auth
  validateUser(id: ID!): String!
  validateUserWithEmail(email: String!): String!
  login(email: String!, password: String!): Any!
  register(input: NewUser!): Any!
  createUser(input: NewUser!): User!
  updateMyUser(input: AllUpdateUser!): String! @auth
  updateUser(id: ID!, input: UpdateUser!): User!
  deleteUser(id: ID!): User!
}
